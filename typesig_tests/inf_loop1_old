
inf_loop1:adapt/3 :: (([],_,_) -> {[],_})
inf_loop1:adapt0/3 :: none()
inf_loop1:b_clause_segments/1 :: none()
inf_loop1:choose_binseg/1 :: none()
inf_loop1:get_all_similar_match/2 :: ((_,[] | {'b_clause',[any()],_,_,_,[] | {'b_clause',[any()],_,_,_,[] | {'b_clause',[any()],_,_,_,[] | {_,_,_,_,_,_}}}}) -> any())
inf_loop1:get_all_similar_match/3 :: ((_,[] | {'b_clause',[any()],_,_,_,[] | {'b_clause',[any()],_,_,_,[] | {'b_clause',[any()],_,_,_,[] | {_,_,_,_,_,_}}}},[]) -> [])
inf_loop1:get_largest_count/3 :: (([{'match',_,_}],_,{_,_}) -> any())
inf_loop1:get_match/3 :: ((_,[any()],_) -> any())
inf_loop1:have_same_match/2 :: (({'match',_,_},possibly_improper_list()) -> bool())
inf_loop1:interference_conclusion_neg/5 :: ((_,_,_,_,_) -> 'fails' | 'no_info')
inf_loop1:interference_conclusion_pos/5 :: ((_,_,_,_,_) -> 'fails' | 'no_info' | 'succeeds')
inf_loop1:make_search_key/2 :: ((_,_) -> {_,_})
inf_loop1:match/3 :: ((_,possibly_improper_list(),_) -> bool())
inf_loop1:match_tag/1 :: (({'match',_,_}) -> any())
inf_loop1:match_val/1 :: (({'match',_,_}) -> any())
inf_loop1:mismatch/3 :: none()
inf_loop1:mismatch/4 :: ((_,possibly_improper_list(),_,_) -> [any()] | 'true')
inf_loop1:remove_fail_match/3 :: none()
inf_loop1:remove_succ_match/3 :: none()
inf_loop1:simpl_count/1 :: none()
inf_loop1:simpl_count/2 :: none()
inf_loop1:simpl_count_segs/2 :: (([{'match',_,_}],_) -> any())
