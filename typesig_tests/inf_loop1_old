
inf_loop1:b_clause_segments/1 :: (({'b_clause',_,_,_,_,_})->any())
inf_loop1:match_tag/1 :: (({'match',_,_})->any())
inf_loop1:match_val/1 :: (({'match',_,_})->any())
inf_loop1:adapt/3 :: (([] | {'b_clause',[{_,_,_}],_,_,_,[] | {'b_clause',[any()],_,_,_,[] | {_,_,_,_,_,_}}},any(),any())->{[] | {'clause_tree',{'label',_},{'clause_tree',{_,_,_},[] | {_,_,_,_},[] | {_,_,_,_}},[]},_})
inf_loop1:adapt0/3 :: (({'b_clause',[{'match',_,_}],_,_,_,[] | {'b_clause',[{_,_,_}],_,_,_,[] | {'b_clause',[any()],_,_,_,[] | {_,_,_,_,_,_}}}},any(),any())->{{'clause_tree',{'match',_,_},[] | {'clause_tree',{_,_},{_,_,_,_},[]},[] | {'clause_tree',{_,_},{_,_,_,_},[]}},_})
inf_loop1:get_all_similar_match/2 :: ((any(),[] | {'b_clause',[any()],_,_,_,[] | {'b_clause',[any()],_,_,_,[] | {'b_clause',[any()],_,_,_,[] | {_,_,_,_,_,_}}}})->any())
inf_loop1:get_all_similar_match/3 :: ((any(),[] | {'b_clause',[any()],_,_,_,[] | {'b_clause',[any()],_,_,_,[] | {'b_clause',[any()],_,_,_,[] | {_,_,_,_,_,_}}}},any())->any())
inf_loop1:get_match/3 :: ((any(),[any()],any())->any())
inf_loop1:have_same_match/2 :: ((any(),possibly_improper_list())->bool())
inf_loop1:remove_succ_match/3 :: ((any(),[] | {'b_clause',possibly_improper_list(),_,_,_,[] | {'b_clause',possibly_improper_list(),_,_,_,[] | {'b_clause',possibly_improper_list(),_,_,_,[] | {_,_,_,_,_,_}}}},any())->[] | {'b_clause',[any()] | 'true',_,_,_,[] | {'b_clause',[any()] | 'true',_,_,_,[] | {_,_,_,_,_,_}}})
inf_loop1:mismatch/3 :: ((any(),possibly_improper_list(),any())->[any()] | 'true')
inf_loop1:mismatch/4 :: ((any(),possibly_improper_list(),any(),any())->[any()] | 'true')
inf_loop1:interference_conclusion_pos/5 :: ((any(),any(),any(),any(),any())->'fails' | 'no_info' | 'succeeds')
inf_loop1:make_search_key/2 :: ((any(),any())->{_,_})
inf_loop1:remove_fail_match/3 :: ((any(),[] | {'b_clause',possibly_improper_list(),_,_,_,[] | {'b_clause',possibly_improper_list(),_,_,_,[] | {'b_clause',possibly_improper_list(),_,_,_,[] | {_,_,_,_,_,_}}}},any())->[] | {'b_clause',possibly_improper_list(),_,_,_,[] | {'b_clause',possibly_improper_list(),_,_,_,[] | {_,_,_,_,_,_}}})
inf_loop1:match/3 :: ((any(),possibly_improper_list(),any())->bool())
inf_loop1:interference_conclusion_neg/5 :: ((any(),any(),any(),any(),any())->'fails' | 'no_info')
inf_loop1:choose_binseg/1 :: (({'b_clause',[{'match',_,_}],_,_,_,[] | {'b_clause',[{_,_,_}],_,_,_,[] | {'b_clause',[any()],_,_,_,[] | {_,_,_,_,_,_}}}})->any())
inf_loop1:get_largest_count/3 :: (([{'match',_,_}],any(),{_,_})->any())
inf_loop1:simpl_count/1 :: (([] | {'b_clause',[{'match',_,_}],_,_,_,[] | {'b_clause',[{_,_,_}],_,_,_,[] | {'b_clause',[any()],_,_,_,[] | {_,_,_,_,_,_}}}})->any())
inf_loop1:simpl_count/2 :: (([] | {'b_clause',[{'match',_,_}],_,_,_,[] | {'b_clause',[{_,_,_}],_,_,_,[] | {'b_clause',[any()],_,_,_,[] | {_,_,_,_,_,_}}}},any())->any())
inf_loop1:simpl_count_segs/2 :: (([{'match',_,_}],any())->any())
inf_loop1:module_info/0 :: (()->any())
inf_loop1:module_info/1 :: ((any())->any())
