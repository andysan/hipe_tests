{lists_filter,dropwhile_improper_list,0} : OK
 typesig:  (() -> nonempty_improper_list(number(),'foo'))
 dataflow: (() -> nonempty_improper_list(number(),'foo'))
   typean: (() -> nonempty_improper_list(number(),'foo'))
{lists_filter,dropwhile_list,0} : OK
 typesig:  (() -> [1 | 2])
 dataflow: (() -> [1 | 2])
   typean: (() -> [1 | 2])
{lists_filter,dropwhile_nil,0} : OK
 typesig:  (() -> [])
 dataflow: (() -> [])
   typean: (() -> [])
{lists_filter,dropwhile_none,0} : OK
 typesig:  (() -> none())
 dataflow: (() -> [])
   typean: (() -> [])
{lists_filter,dropwhile_nonempty,0} : OK
 typesig:  (() -> [1 | 2,...])
 dataflow: (() -> [1 | 2,...])
   typean: (() -> [1 | 2,...])
{lists_filter,filter_list,0} : OK
 typesig:  (() -> [1 | 2])
 dataflow: (() -> [1 | 2])
   typean: (() -> [1 | 2])
{lists_filter,filter_nil,0} : OK
 typesig:  (() -> [])
 dataflow: (() -> [])
   typean: (() -> [])
{lists_filter,filter_none,0} : OK
 typesig:  (() -> none())
 dataflow: (() -> [1 | 2,...])
   typean: (() -> [1 | 2,...])
{lists_filter,filter_nonempty,0} : OK
 typesig:  (() -> [1 | 2,...])
 dataflow: (() -> [1 | 2,...])
   typean: (() -> [1 | 2,...])
{lists_filter,partition_list_list,1} : OK
 typesig:  (([any()]) -> {[any()],[any()]})
 dataflow: ((_) -> {[any()],[any()]})
   typean: ((_) -> {[any()],[any()]})
{lists_filter,partition_list_nil,0} : OK
 typesig:  (() -> {[1 | 2,...],[]})
 dataflow: (() -> {[1 | 2,...],[]})
   typean: (() -> {[1 | 2,...],[]})
{lists_filter,partition_nil_list,0} : OK
 typesig:  (() -> {[],[1 | 2,...]})
 dataflow: (() -> {[],[1 | 2,...]})
   typean: (() -> {[],[1 | 2,...]})
{lists_filter,splitwith_list_list,0} : OK
 typesig:  (() -> {[1 | 2],[1 | 2]})
 dataflow: (() -> {[1 | 2],[1 | 2]})
   typean: (() -> {[1 | 2],[1 | 2]})
{lists_filter,splitwith_list_nil,0} : OK
 typesig:  (() -> {[1 | 2,...],[]})
 dataflow: (() -> {[1 | 2,...],[]})
   typean: (() -> {[1 | 2,...],[]})
{lists_filter,splitwith_nil_list,0} : OK
 typesig:  (() -> {[],[1 | 2,...]})
 dataflow: (() -> {[],[1 | 2,...]})
   typean: (() -> {[],[1 | 2,...]})
{lists_filter,splitwith_none,0} : OK
 typesig:  (() -> none())
 dataflow: (() -> {[],[1 | 2,...]})
   typean: (() -> {[],[1 | 2,...]})
{lists_filter,takewhile_list1,0} : OK
 typesig:  (() -> [1 | 2])
 dataflow: (() -> [1 | 2])
   typean: (() -> [1 | 2])
{lists_filter,takewhile_list2,0} : OK
 typesig:  (() -> [number()])
 dataflow: (() -> [number()])
   typean: (() -> [number()])
{lists_filter,takewhile_nil,0} : OK
 typesig:  (() -> [])
 dataflow: (() -> [])
   typean: (() -> [])
{lists_filter,takewhile_none,0} : OK
 typesig:  (() -> none())
 dataflow: (() -> [])
   typean: (() -> [])
{lists_filter,takewhile_nonempty,0} : OK
 typesig:  (() -> [1 | 2,...])
 dataflow: (() -> [1 | 2,...])
   typean: (() -> [1 | 2,...])
